% ---ЗАДАЧА КОММИВОЯЖЕРА---
% Дано: Ориентированный взвешенный граф
% Цель: найти минимальный путь, проходящий
% через все вершины в ориентированном взвешенном графе.

% Зададим веса дугам через предикат cost/3
% Первый параметр - начальная вершина дуги
% Второй параметр - конечная вершина дуги
% Третий парамет - вес дуги
cost(1,2,2).  cost(1,3,3).  cost(1,4,1).
cost(2,4,2).  cost(2,5,2).  cost(2,6,4).
cost(3,6,3).  
cost(4,1,1).  cost(4,2,2).
cost(5,4,2).  cost(5,6,1).
cost(6,2,4).  cost(6,3,3).  cost(6,5,1).

% Определим дуги
edge(X,Y) :- cost(X,Y,_).

% Определим вершины
node(X) :- cost(X,_,_).
node(Y) :- cost(_,Y,_).

% Ищем путь
{cycle(X,Y) : edge(X,Y)} = 1 :- node(X).
{cycle(X,Y) : edge(X,Y)} = 1 :- node(Y).

% Путь должен быть только один
reached(Y) :- cycle(1,Y).
reached(Y) :- cycle(X,Y), reached(X).

 % Поиск минимального пути
#minimize {C,X,Y : cycle(X,Y), cost(X,Y,C)}.
#show cycle/2.

